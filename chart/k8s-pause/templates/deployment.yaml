apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-pause.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "k8s-pause.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "k8s-pause.chart" . }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "k8s-pause.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        {{- if .Values.podAnnotations }}
          {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "k8s-pause.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "k8s-pause.serviceAccountName" . }}
      containers:
      - name: k8s-pause
        env:
        {{- if .Values.env }}
        {{- range $key, $value := .Values.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
        {{- end }}
        {{- end }}
        {{- range $key, $value := .Values.extraEnvSecrets }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ required "Must specify secret!" $value.secret }}
                key: {{ required "Must specify key!" $value.key }}
          {{- end }}
        {{- if .Values.envFromSecret }}
        envFrom:
        - secretRef:
            name: {{ .Values.envFromSecret }}
        {{- end }}
        image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        {{- if .Values.kubeRBACProxy.enabled }}
        - --metrics-addr=127.0.0.1:9556
        {{- end }}
        {{- if .Values.extraArgs }}
        {{- toYaml .Values.extraArgs | nindent 8 }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.webhook.port }}
          name: webhook-server
          protocol: TCP
        - name: metrics
          containerPort: {{ .Values.metricsPort }}
          protocol: TCP
        - name: probes
          containerPort: {{ .Values.probesPort }}
          protocol: TCP
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 10 }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          mountPath: {{ .path }}
          {{- if .subPath }}
          subPath: {{ .subPath }}
          {{- end }}
        {{- end }}
      {{- if .Values.kubeRBACProxy.enabled }}
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:{{ .Values.metricsPort }}
        - --logtostderr=true
        - --v=0
        image: quay.io/brancz/kube-rbac-proxy:v0.14.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          {{- toYaml .Values.kubeRBACProxy.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.kubeRBACProxy.securityContext | nindent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      {{- end }}
      {{- if .Values.extraContainers }}
      {{- toYaml .Values.extraContainers | nindent 6 }}
      {{- end }}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ include "k8s-pause.certManager.servingCertName" . }}
      {{- range .Values.secretMounts }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      terminationGracePeriodSeconds: 30
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
